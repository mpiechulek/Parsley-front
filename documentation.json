{
  "pipes": [],
  "interfaces": [
    {
      "name": "AuthAction",
      "id": "interface-AuthAction-6d33c4c213879ee709eaf982e87a9164fe06e97584820f94622e849f49d0e864538f5523553c2652da3f02752fd9496c37365afaf80905a63ed8299bf9a97ea4",
      "file": "src/app/core/models/auth-form.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from \"@angular/forms\";\r\n\r\ntype ToFormGroup<T> = {\r\n  [P in keyof T]: FormControl<T[P]>;\r\n};\r\n\r\nexport interface AuthForm {\r\n  email: string | null;\r\n  password: string | null;\r\n  confirmPassword?: string | null;\r\n}\r\n\r\nexport enum AuthFormType {\r\n  LOGIN = 'login',\r\n  SIGNUP = 'signup',\r\n}\r\n\r\nexport interface AuthAction {\r\n  type: AuthFormType;\r\n  payload: AuthForm;\r\n}\r\n\r\nexport type AuthFormControls = ToFormGroup<AuthForm>;\r\n",
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "AuthForm",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "AuthFormType",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "AuthForm",
      "id": "interface-AuthForm-6d33c4c213879ee709eaf982e87a9164fe06e97584820f94622e849f49d0e864538f5523553c2652da3f02752fd9496c37365afaf80905a63ed8299bf9a97ea4",
      "file": "src/app/core/models/auth-form.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from \"@angular/forms\";\r\n\r\ntype ToFormGroup<T> = {\r\n  [P in keyof T]: FormControl<T[P]>;\r\n};\r\n\r\nexport interface AuthForm {\r\n  email: string | null;\r\n  password: string | null;\r\n  confirmPassword?: string | null;\r\n}\r\n\r\nexport enum AuthFormType {\r\n  LOGIN = 'login',\r\n  SIGNUP = 'signup',\r\n}\r\n\r\nexport interface AuthAction {\r\n  type: AuthFormType;\r\n  payload: AuthForm;\r\n}\r\n\r\nexport type AuthFormControls = ToFormGroup<AuthForm>;\r\n",
      "properties": [
        {
          "name": "confirmPassword",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "indexKey": "",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "password",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Fats",
      "id": "interface-Fats-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "monounsaturated",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "polyunsaturated",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "saturated",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "trans",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "FoodListShortResponse",
      "id": "interface-FoodListShortResponse-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FoodShortModel[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 98
        },
        {
          "name": "message",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 99
        },
        {
          "name": "success",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 97
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "FoodModel",
      "id": "interface-FoodModel-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "calories",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "glycemic_index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "macroNutrients",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MacroNutrients",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "minerals",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Minerals",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "vitamins",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Vitamins",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "water",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "FoodResponse",
      "id": "interface-FoodResponse-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FoodModel",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 88
        },
        {
          "name": "message",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "success",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 87
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "FoodShortModel",
      "id": "interface-FoodShortModel-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "FoodShortModel",
      "id": "interface-FoodShortModel-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b-1",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 93
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 94
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "FoodShortModel-1"
    },
    {
      "name": "FoodState",
      "id": "interface-FoodState-ccbea616c1b996345ef5ff62fdc4b8faf51cecc571a08b671c906e9716b9b638d8420903503be6666cfdd544c12c92c807783a0db1ca23b6ddacf9bd627b96af",
      "file": "src/app/core/models/food-state.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HttpErrorResponse } from '@angular/common/http';\r\nimport { FoodShortModel } from './food.model';\r\n\r\nexport interface FoodState {\r\n  foodShortList: FoodShortModel[];\r\n  error: HttpErrorResponse | null;\r\n}\r\n",
      "properties": [
        {
          "name": "error",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HttpErrorResponse | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "foodShortList",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FoodShortModel[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "GlobalState",
      "id": "interface-GlobalState-08415773b1c195bafc1bed882380e29bc1e925ad971f0e89d16455c5371e3903e1d51da349921f14d6de41ae452e48acdc4e49e2287a7ac9246a76e59a626e87",
      "file": "src/app/core/models/global-state.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport interface GlobalState {\r\n  appInit: boolean;\r\n  isLoading: boolean;\r\n  isUserAuthorized: boolean;\r\n  isSignup: boolean;\r\n  bearerToken: string | null;\r\n  error: HttpErrorResponse | null;\r\n}\r\n",
      "properties": [
        {
          "name": "appInit",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "bearerToken",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "error",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HttpErrorResponse | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "isLoading",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "isSignup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "isUserAuthorized",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "MacroNutrients",
      "id": "interface-MacroNutrients-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "carbohydrates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "cholesterol",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "fats",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Fats",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "fiber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "protein",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Protein",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 45
        },
        {
          "name": "sugars",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Sugars",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Minerals",
      "id": "interface-Minerals-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "calcium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "chromium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 82
        },
        {
          "name": "copper",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 77
        },
        {
          "name": "fluoride",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 81
        },
        {
          "name": "iodine",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "iron",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 75
        },
        {
          "name": "magnesium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "manganese",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "molybdenum",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 83
        },
        {
          "name": "phosphorus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 73
        },
        {
          "name": "potassium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "selenium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 79
        },
        {
          "name": "sodium",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "zinc",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 76
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Protein",
      "id": "interface-Protein-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "animal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "plant",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RouteData",
      "id": "interface-RouteData-ef4096ef6989b4e94f78164d86129c7b4116234ad5d6ced42b5a0e0dc12f06225f7a5ccb57266c2da3e497c0fdb0c56f259434e88aaf48f25f8100f4aa63944b",
      "file": "src/app/core/models/route.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface RouteData {\r\n  title: string;\r\n  name: string;\r\n  showInNav: boolean;\r\n}\r\n\r\nexport interface RouteDataForDisplay extends Omit<RouteData, 'showInNav'> {\r\n  path?: string;\r\n}\r\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "showInNav",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RouteDataForDisplay",
      "id": "interface-RouteDataForDisplay-ef4096ef6989b4e94f78164d86129c7b4116234ad5d6ced42b5a0e0dc12f06225f7a5ccb57266c2da3e497c0fdb0c56f259434e88aaf48f25f8100f4aa63944b",
      "file": "src/app/core/models/route.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface RouteData {\r\n  title: string;\r\n  name: string;\r\n  showInNav: boolean;\r\n}\r\n\r\nexport interface RouteDataForDisplay extends Omit<RouteData, 'showInNav'> {\r\n  path?: string;\r\n}\r\n",
      "properties": [
        {
          "name": "path",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": ["Omit"]
    },
    {
      "name": "Sugars",
      "id": "interface-Sugars-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "fructose",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "glucose",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "sucrose",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "User",
      "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
      "file": "src/stories/user.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface User {\n  name: string;\n}\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "VitaminA",
      "id": "interface-VitaminA-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "beta_carotene",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "IU_units",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "retinol",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Vitamins",
      "id": "interface-Vitamins-3b031cb542be8ea6a695d9f3f0b1018f9b6341777be4c2a6c289aed2a2c0cbfef1de8b15504ae73be471fd4a3ce9dbf73899b000cd50d585bcc8cfc0a4adea8b",
      "file": "src/app/core/models/food.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface FoodModel {\r\n  id: string;\r\n  name: string;\r\n  calories: number;\r\n  water: number;\r\n  macroNutrients: MacroNutrients;\r\n  vitamins: Vitamins;\r\n  minerals: Minerals;\r\n  glycemic_index: number;\r\n}\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Protein {\r\n  total: number;\r\n  animal: number;\r\n  plant: number;\r\n}\r\n\r\nexport interface Fats {\r\n  total: number;\r\n  saturated: number;\r\n  monounsaturated: number;\r\n  polyunsaturated: number;\r\n  trans: number;\r\n}\r\n\r\nexport interface Sugars {\r\n  total: number;\r\n  glucose: number;\r\n  fructose: number;\r\n  sucrose: number;\r\n}\r\n\r\nexport interface VitaminA {\r\n  total: number;\r\n  retinol: number;\r\n  beta_carotene: number;\r\n  IU_units: number;\r\n}\r\n\r\nexport interface MacroNutrients {\r\n  protein: Protein;\r\n  fats: Fats;\r\n  carbohydrates: number;\r\n  sugars: Sugars;\r\n  fiber: number;\r\n  cholesterol: number;\r\n}\r\n\r\nexport interface Vitamins {\r\n  vitamin_C: number;\r\n  vitamin_A: VitaminA;\r\n  vitamin_E: number;\r\n  vitamin_K: number;\r\n  B1_thiamine: number;\r\n  B2_riboflavin: number;\r\n  B3_niacin: number;\r\n  B5_pantothenic_acid: number;\r\n  B6_pyridoxine: number;\r\n  B7_biotin: number;\r\n  B9_folic_acid: number;\r\n  B12_cobalamin: number;\r\n  vitamin_D: number;\r\n}\r\n\r\nexport interface Minerals {\r\n  potassium: number;\r\n  calcium: number;\r\n  magnesium: number;\r\n  phosphorus: number;\r\n  sodium: number;\r\n  iron: number;\r\n  zinc: number;\r\n  copper: number;\r\n  manganese: number;\r\n  selenium: number;\r\n  iodine: number;\r\n  fluoride: number;\r\n  chromium: number;\r\n  molybdenum: number;\r\n}\r\n\r\nexport interface FoodResponse {\r\n  success: boolean;\r\n  data: FoodModel;\r\n  message: string;\r\n}\r\n\r\nexport interface FoodShortModel {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface FoodListShortResponse {\r\n  success: boolean;\r\n  data: FoodShortModel[];\r\n  message: string;\r\n}\r\n\r\n",
      "properties": [
        {
          "name": "B1_thiamine",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "B12_cobalamin",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "B2_riboflavin",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "B3_niacin",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "B5_pantothenic_acid",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "B6_pyridoxine",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "B7_biotin",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "B9_folic_acid",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "vitamin_A",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "VitaminA",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "vitamin_C",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "vitamin_D",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "vitamin_E",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "vitamin_K",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 57
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [
    {
      "name": "ApiService",
      "id": "injectable-ApiService-09266b53d2680430b5f370d0c9f44973c87acba1354bac9251dd1b7b5ea016bbdde26922dcec5621a8df07f074ffe680ba3d3c72172ef9b989c19697bdee0bdf",
      "file": "src/app/core/services/api.service.ts",
      "properties": [
        {
          "name": "apiUrl",
          "defaultValue": "environment.apiUrl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        },
        {
          "name": "httpClient",
          "defaultValue": "inject(HttpClient)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "getFood",
          "args": [
            {
              "name": "foodId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<FoodResponse>",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\nFetches the details of a specific food item by its ID.\n\nThis method sends an HTTP GET request to the API endpoint to retrieve the details\nof a food item identified by the provided `foodId`. The response is an observable\nof type `FoodResponse`, which contains the food item details.\n\nThe method applies the following RxJS operators to the observable stream:\n\n- `debounceTime(300)`: Delays the emission of the value by 300 milliseconds to prevent\n  rapid successive requests, which is useful for scenarios like type-ahead search.\n\n- `distinctUntilChanged()`: Ensures that the observable emits values only when the\n  current value is different from the last emitted value. This helps in avoiding\n  duplicate requests for the same food ID.\n\n- `shareReplay({ bufferSize: 1, refCount: true })`: Shares the observable among multiple\n  subscribers and replays the last emitted value to new subscribers. The `bufferSize: 1`\n  ensures that only the latest value is cached, and `refCount: true` ensures that the\n  observable is kept alive as long as there are subscribers.\n\n",
          "description": "<p>Fetches the details of a specific food item by its ID.</p>\n<p>This method sends an HTTP GET request to the API endpoint to retrieve the details\nof a food item identified by the provided <code>foodId</code>. The response is an observable\nof type <code>FoodResponse</code>, which contains the food item details.</p>\n<p>The method applies the following RxJS operators to the observable stream:</p>\n<ul>\n<li><p><code>debounceTime(300)</code>: Delays the emission of the value by 300 milliseconds to prevent\nrapid successive requests, which is useful for scenarios like type-ahead search.</p>\n</li>\n<li><p><code>distinctUntilChanged()</code>: Ensures that the observable emits values only when the\ncurrent value is different from the last emitted value. This helps in avoiding\nduplicate requests for the same food ID.</p>\n</li>\n<li><p><code>shareReplay({ bufferSize: 1, refCount: true })</code>: Shares the observable among multiple\nsubscribers and replays the last emitted value to new subscribers. The <code>bufferSize: 1</code>\nensures that only the latest value is cached, and <code>refCount: true</code> ensures that the\nobservable is kept alive as long as there are subscribers.</p>\n</li>\n</ul>\n",
          "jsdoctags": [
            {
              "name": {
                "pos": 1704,
                "end": 1710,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "foodId"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 1698,
                "end": 1703,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": "<ul>\n<li>The unique identifier of the food item to be fetched.</li>\n</ul>\n"
            },
            {
              "tagName": {
                "pos": 1774,
                "end": 1781,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": "<p>An observable of type <code>FoodResponse</code> containing the details of the food item.</p>\n"
            }
          ]
        },
        {
          "name": "getFoodsShortList",
          "args": [],
          "optional": false,
          "returnType": "Observable<FoodListShortResponse>",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": [
            {
              "tagName": {
                "pos": 2179,
                "end": 2186,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": ""
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { environment } from '@environments/environment.development';\r\nimport { FoodListShortResponse, FoodResponse } from '@models/food.model';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  Observable,\r\n  shareReplay,\r\n} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n  private httpClient = inject(HttpClient);\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  /**\r\n\r\n   * Fetches the details of a specific food item by its ID.\r\n   *\r\n   * This method sends an HTTP GET request to the API endpoint to retrieve the details\r\n   * of a food item identified by the provided `foodId`. The response is an observable\r\n   * of type `FoodResponse`, which contains the food item details.\r\n   *\r\n   * The method applies the following RxJS operators to the observable stream:\r\n   *\r\n   * - `debounceTime(300)`: Delays the emission of the value by 300 milliseconds to prevent\r\n   *   rapid successive requests, which is useful for scenarios like type-ahead search.\r\n   *\r\n   * - `distinctUntilChanged()`: Ensures that the observable emits values only when the\r\n   *   current value is different from the last emitted value. This helps in avoiding\r\n   *   duplicate requests for the same food ID.\r\n   *\r\n   * - `shareReplay({ bufferSize: 1, refCount: true })`: Shares the observable among multiple\r\n   *   subscribers and replays the last emitted value to new subscribers. The `bufferSize: 1`\r\n   *   ensures that only the latest value is cached, and `refCount: true` ensures that the\r\n   *   observable is kept alive as long as there are subscribers.\r\n   *\r\n   * @param foodId - The unique identifier of the food item to be fetched.\r\n   * @returns An observable of type `FoodResponse` containing the details of the food item.\r\n   */\r\n  getFood(foodId: string): Observable<FoodResponse> {\r\n    return this.httpClient\r\n      .get<FoodResponse>(`${this.apiUrl}/foods/${foodId}`)\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        shareReplay({ bufferSize: 1, refCount: true }),\r\n      );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns\r\n   */\r\n  getFoodsShortList(): Observable<FoodListShortResponse> {\r\n    return this.httpClient.get<FoodListShortResponse>(\r\n      `${this.apiUrl}/foods/short-list`,\r\n    );\r\n  }\r\n}\r\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "AuthService",
      "id": "injectable-AuthService-d56a040505e6a6f9829e8686dec7e8e50bf7306a613810e0982df693a43e64f7bc6df4b268f70f06ac6f4143924b87390f0cd9b113ca195d7001a2d38dc7c27b",
      "file": "src/app/core/services/auth.service.ts",
      "properties": [
        {
          "name": "apiUrl",
          "defaultValue": "environment.apiUrl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [123]
        },
        {
          "name": "bearerToken",
          "defaultValue": "signal<string | null>(null)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [123]
        },
        {
          "name": "httpClient",
          "defaultValue": "inject(HttpClient)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "loginUser",
          "args": [
            {
              "name": "email",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "password",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<literal type>",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": [
            {
              "name": {
                "pos": 950,
                "end": 955,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "email"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 944,
                "end": 949,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            },
            {
              "name": {
                "pos": 969,
                "end": 977,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "password"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 963,
                "end": 968,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "logout",
          "args": [],
          "optional": false,
          "returnType": "Observable<undefined>",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        },
        {
          "name": "refreshToken",
          "args": [],
          "optional": false,
          "returnType": "Observable<literal type>",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": []
        },
        {
          "name": "resetToken",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        },
        {
          "name": "signUpNewUser",
          "args": [
            {
              "name": "email",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "password",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<literal type>",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": [
            {
              "name": {
                "pos": 1660,
                "end": 1665,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "email"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 1654,
                "end": 1659,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            },
            {
              "name": {
                "pos": 1679,
                "end": 1687,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "password"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 1673,
                "end": 1678,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { inject, Injectable, signal } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.development';\r\nimport { Observable, tap } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private httpClient = inject(HttpClient);\r\n  private apiUrl = environment.apiUrl;\r\n  private bearerToken = signal<string | null>(null);\r\n\r\n  /**\r\n   *\r\n   */\r\n  get getBearerToken(): string | null {\r\n    return this.bearerToken();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  set setBearerToken(token: string) {\r\n    this.bearerToken.set(token);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  resetToken(): void {\r\n    this.bearerToken.set(null);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  logout(): Observable<undefined> {\r\n    return this.httpClient.post<undefined>(\r\n      `${this.apiUrl}/auth/logout`,\r\n      {},\r\n      { withCredentials: true },\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param email\r\n   * @param password\r\n   */\r\n  loginUser(email: string, password: string): Observable<{ token: string }> {\r\n    return this.httpClient\r\n      .post<{\r\n        token: string;\r\n      }>(\r\n        `${this.apiUrl}/auth/login`,\r\n        { email, password },\r\n        { withCredentials: true },\r\n      )\r\n      .pipe(\r\n        tap(({ token }) => {\r\n          this.bearerToken.set(token);\r\n        }),\r\n      );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param email\r\n   * @param password\r\n   */\r\n\r\n  refreshToken(): Observable<{ token: string }> {\r\n    return this.httpClient.post<{ token: string }>(\r\n      `${this.apiUrl}/auth/refresh`,\r\n      {},\r\n      { withCredentials: true },\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param email\r\n   * @param password\r\n   */\r\n  signUpNewUser(\r\n    email: string,\r\n    password: string,\r\n  ): Observable<{ token: string }> {\r\n    return this.httpClient.post<{ token: string }>(\r\n      `${this.apiUrl}/auth/register`,\r\n      { email, password },\r\n      { withCredentials: true },\r\n    );\r\n  }\r\n}\r\n",
      "accessors": {
        "getBearerToken": {
          "name": "getBearerToken",
          "getSignature": {
            "name": "getBearerToken",
            "type": "",
            "returnType": "string | null",
            "line": 16,
            "rawdescription": "\n\n\n",
            "description": ""
          }
        },
        "setBearerToken": {
          "name": "setBearerToken",
          "setSignature": {
            "name": "setBearerToken",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "token",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 23,
            "rawdescription": "\n\n\n",
            "description": "",
            "jsdoctags": [
              {
                "name": "token",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "NavRoutesService",
      "id": "injectable-NavRoutesService-f630c015a2d272f59d31f1709e96c20161ed3d7f53f77b5d60d2b6cacaaa3e4c1d291a41c572b2bf36f9c470833676fcf3989f4bac1d22a7e5cd7f7f440022e5",
      "file": "src/app/core/services/nav-routes.service.ts",
      "properties": [
        {
          "name": "_routesForNav",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RouteDataForDisplay[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "generateRoutesForNav",
          "args": [
            {
              "name": "routes",
              "type": "Routes",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [125],
          "jsdoctags": [
            {
              "name": {
                "pos": 387,
                "end": 393,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "routes"
              },
              "type": "Routes",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 381,
                "end": 386,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": "<p>The routes to be filtered</p>\n"
            },
            {
              "tagName": {
                "pos": 426,
                "end": 433,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": "<p>The filtered routes that should be shown in the navigation</p>\n"
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { RouteData, RouteDataForDisplay } from '@models/route.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavRoutesService {\n  private _routesForNav: RouteDataForDisplay[] = [];\n\n  get routesForNav(): RouteDataForDisplay[] {\n    return this._routesForNav;\n  }\n\n  /**\n   *\n   * @param routes The routes to be filtered\n   * @returns The filtered routes that should be shown in the navigation\n   */\n  public generateRoutesForNav(routes: Routes) {\n    routes.forEach((route) => {\n      if (route.path && route.children) {\n        route.children.forEach((childRoute) => {\n          const routeData: RouteData = childRoute.data as RouteData;\n          if (routeData.showInNav && routeData.title) {\n            this._routesForNav.push({ ...routeData, path: childRoute.path });\n          }\n        });\n      }\n    });\n  }\n}\n",
      "accessors": {
        "routesForNav": {
          "name": "routesForNav",
          "getSignature": {
            "name": "routesForNav",
            "type": "[]",
            "returnType": "RouteDataForDisplay[]",
            "line": 11
          }
        }
      },
      "extends": [],
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-f087dd6a863e2003e730341029753962f9e64faea47c69c9d39ea091cb2f0a65fa2286494c09043956d6ba4fd4e9c6b97e8901112cff7f2d03328dfffe18bd36",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "navRoutesService",
          "defaultValue": "inject(NavRoutesService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "RouterOutlet"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n  ActivatedRoute,\n  NavigationEnd,\n  Router,\n  RouterOutlet,\n} from '@angular/router';\nimport { NavRoutesService } from '@services/nav-routes.service';\nimport { routes } from './app.routes';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  navRoutesService = inject(NavRoutesService);\n\n  constructor(\n    private router: Router,\n    private titleService: Title,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    // Here we are subscribing to the router events to set the title of the page\n    // based on the data property of the route. The title is set to \"Parsley | Route Title\"\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.titleService.setTitle(\n          `Parsley | ${\n            this.activatedRoute.snapshot.firstChild?.data['title'] ||\n            'Route Title'\n          }`,\n        );\n      }\n    });\n    // Generate the routes for the side nav\n    // This is done in the constructor of the NavRoutesService\n    // IN THIS PLACE IT TIS BEING INITIALIZED AGAIN\n    this.navRoutesService.generateRoutesForNav(routes);\n  }\n}\n",
      "styleUrl": "./app.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "titleService",
            "type": "Title",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "titleService",
            "type": "Title",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<router-outlet />\r\n"
    },
    {
      "name": "AuthPageComponent",
      "id": "component-AuthPageComponent-ffd3c313c064bf7e1ce74cc1c10b8699054e47b59a46ff5c15a29f57288cb120cd8b120723ecb08ec6530072806c42be7150864b122066e99be26ca7c308e454",
      "file": "src/app/features/auth-page/auth-page.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-auth-page",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./auth-page.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "authFormTypes",
          "defaultValue": "AuthFormType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "globalStore",
          "defaultValue": "inject(GlobalStore)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [148]
        },
        {
          "name": "selectedFormType",
          "defaultValue": "this.authFormTypes.LOGIN",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"login\" | \"signup\"",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [
        {
          "name": "onAuthorize",
          "args": [
            {
              "name": "action",
              "type": "AuthAction",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": [
            {
              "name": {
                "pos": 1887,
                "end": 1893,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "action"
              },
              "type": "AuthAction",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 1881,
                "end": 1886,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "onChoseFormType",
          "args": [
            {
              "name": "type",
              "type": "\"login\" | \"signup\"",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "jsdoctags": [
            {
              "name": {
                "pos": 1754,
                "end": 1758,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "type"
              },
              "type": "\"login\" | \"signup\"",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 1748,
                "end": 1753,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatCardModule",
          "type": "module"
        },
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "SpinnerComponent",
          "type": "component"
        },
        {
          "name": "SignupFormComponent",
          "type": "component"
        },
        {
          "name": "LoginFormComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { SignupFormComponent } from './signup-form/signup-form.component';\r\nimport { AuthAction, AuthFormType } from '@models/auth-form.model';\r\nimport { SpinnerComponent } from '@shared/components/spinner/spinner.component';\r\nimport { GlobalStore } from 'app/state/global.state';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Component, effect, inject, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-page',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    SpinnerComponent,\r\n    SignupFormComponent,\r\n    LoginFormComponent,\r\n  ],\r\n  templateUrl: './auth-page.component.html',\r\n  styleUrl: './auth-page.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AuthPageComponent {\r\n  readonly globalStore = inject(GlobalStore);\r\n  authFormTypes: typeof AuthFormType = AuthFormType;\r\n  selectedFormType: 'login' | 'signup' = this.authFormTypes.LOGIN;\r\n\r\n  constructor() {\r\n    // When the user is manages to sirup successfully, we want to show the login form\r\n    effect(() => {\r\n      const isSignup = this.globalStore.isSignup();\r\n      if (isSignup) {\r\n        this.selectedFormType = this.authFormTypes.LOGIN;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param type\r\n   */\r\n  onChoseFormType(type: 'login' | 'signup'): void {\r\n    this.selectedFormType = type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param action\r\n   */\r\n  onAuthorize(action: AuthAction): void {\r\n    const email = action.payload.email;\r\n    const password = action.payload.password;\r\n    if (email && password) {\r\n      if (action.type === this.authFormTypes.LOGIN) {\r\n        this.globalStore.loginUser(email, password);\r\n      }\r\n      if (\r\n        action.type === this.authFormTypes.SIGNUP &&\r\n        action.payload.password\r\n      ) {\r\n        this.globalStore.signUpNewUser(email, password);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "styleUrl": "./auth-page.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 35
      },
      "extends": [],
      "templateData": "<div class=\"container\">\r\n  <div class=\"graphic-section\">\r\n    <div class=\"graphic-content\">\r\n      <h1>Welcome to Parsley</h1>\r\n      <p>To your private meal manager</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"login-section\">\r\n    <div class=\"login-wrapper\">\r\n      @if (globalStore.isLoading()) {\r\n        <app-spinner />\r\n      }\r\n\r\n      @if (selectedFormType === authFormTypes.LOGIN) {\r\n        <app-login-form (authAction)=\"onAuthorize($event)\" />\r\n        <p class=\"auth-info\">\r\n          Don't have an account yet?\r\n          <a\r\n            tabindex=\"0\"\r\n            (keypress)=\"onChoseFormType(authFormTypes.SIGNUP)\"\r\n            (click)=\"onChoseFormType(authFormTypes.SIGNUP)\"\r\n            >Sign Up</a\r\n          >\r\n        </p>\r\n        <p class=\"auth-info\">\r\n          Or\r\n          <a tabindex=\"0\">Forgot Password / Change Password</a>\r\n        </p>\r\n      } @else if (selectedFormType === authFormTypes.SIGNUP) {\r\n        <app-signup-form (authAction)=\"onAuthorize($event)\" />\r\n        <p class=\"auth-info\">\r\n          Have an account already.\r\n          <a\r\n            tabindex=\"0\"\r\n            (keypress)=\"onChoseFormType(authFormTypes.LOGIN)\"\r\n            (click)=\"onChoseFormType(authFormTypes.LOGIN)\"\r\n            >Log In</a\r\n          >\r\n        </p>\r\n      }\r\n    </div>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
      "file": "src/stories/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": ["./button.css"],
      "styles": [],
      "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "backgroundColor",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nWhat background color to use",
          "description": "<p>What background color to use</p>\n",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "'Button'",
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "pos": 760,
              "end": 773,
              "kind": 327,
              "id": 0,
              "flags": 16842752,
              "modifierFlagsCache": 0,
              "transformFlags": 0,
              "tagName": {
                "pos": 761,
                "end": 769,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "required"
              },
              "comment": ""
            }
          ],
          "rawdescription": "\n\nButton contents\n\n",
          "description": "<p>Button contents</p>\n",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "primary",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nIs this the principal call to action on the page?",
          "description": "<p>Is this the principal call to action on the page?</p>\n",
          "line": 21,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'medium'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nHow large should the button be?",
          "description": "<p>How large should the button be?</p>\n",
          "line": 29,
          "type": "\"small\" | \"medium\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nOptional click handler",
          "description": "<p>Optional click handler</p>\n",
          "line": 41,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
          "styleUrl": "./button.css"
        }
      ],
      "stylesData": "",
      "extends": [],
      "accessors": {
        "classes": {
          "name": "classes",
          "getSignature": {
            "name": "classes",
            "type": "[]",
            "returnType": "string[]",
            "line": 43
          }
        }
      }
    },
    {
      "name": "DashboardComponent",
      "id": "component-DashboardComponent-c94a2cfa9e42e5d3f4140e19349c2130888f4301a1b786980aea7a84eb60e3d67729627fb93cfc7eea70d4f01070ab2322ecdd09030a20f8e4f67ae11e065d8c",
      "file": "src/app/features/dashboard/dashboard.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-dashboard",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dashboard.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "navRoutesService",
          "defaultValue": "inject(NavRoutesService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "rippleColor",
          "defaultValue": "'#43a047'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "routesForNav",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RouteDataForDisplay[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "removeDashboardRoute",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "GenderPickerComponent",
          "type": "component"
        },
        {
          "name": "RouterModule",
          "type": "module"
        },
        {
          "name": "PageHeaderComponent",
          "type": "component"
        },
        {
          "name": "MatRippleModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { GenderPickerComponent } from './gender-picker/gender-picker.component';\nimport { NavRoutesService } from '@services/nav-routes.service';\nimport { RouteDataForDisplay } from '@models/route.model';\nimport { RouterModule } from '@angular/router';\nimport { PageHeaderComponent } from '@shared/components/page-header/page-header.component';\nimport { MatRippleModule } from '@angular/material/core';\n@Component({\n  selector: 'app-dashboard',\n  imports: [\n    CommonModule,\n    GenderPickerComponent,\n    RouterModule,\n    PageHeaderComponent,\n    MatRippleModule,\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\nexport class DashboardComponent implements OnInit {\n  navRoutesService = inject(NavRoutesService);\n  routesForNav: RouteDataForDisplay[] = [];\n  rippleColor = '#43a047';\n\n  ngOnInit(): void {\n    this.routesForNav = this.navRoutesService.routesForNav;\n    this.removeDashboardRoute();\n  }\n\n  /**\n   *\n   */\n  removeDashboardRoute(): void {\n    this.routesForNav = this.routesForNav.filter(\n      (route) => route.path !== 'dashboard',\n    );\n  }\n}\n",
      "styleUrl": "./dashboard.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"dashboard\">\n  <app-page-header title=\"Dashboard\" />\n  <app-gender-picker />\n  <div class=\"grid-nav\">\n    @for (route of routesForNav; track route.name) {\n      <a\n        matRipple\n        [matRippleCentered]=\"true\"\n        [matRippleColor]=\"rippleColor\"\n        class=\"grid-nav__item\"\n        [routerLink]=\"'/layout/' + route.path\"\n        routerLinkActive=\"active-link\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <span>{{ route.name }}</span>\n      </a>\n    }\n  </div>\n</div>\n"
    },
    {
      "name": "FoodSearchComponent",
      "id": "component-FoodSearchComponent-3a32d91f997eb3156561badd08f5925a1222d21e529f0a0aa5dcc9e1d731887265636bad9c32643a57ef70efa4dd308937c325b2358d9b03534b14f9f904afbf",
      "file": "src/app/features/food-search/food-search.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-search",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./food-search.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "apiService",
          "defaultValue": "inject(ApiService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "foodData",
          "defaultValue": "signal<FoodModel>({} as FoodModel)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "foodSearchList",
          "defaultValue": "signal<FoodShortModel[]>([] as FoodShortModel[])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "foodStore",
          "defaultValue": "inject(FoodStore)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "postsResource",
          "defaultValue": "httpResource<unknown>(\n    {\n      url: 'http://localhost:3000/api/v1/nutrition',\n      method: 'GET',\n    },\n    {\n      // Optional configuration\n      defaultValue: [],\n    },\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [148]
        }
      ],
      "methodsClass": [
        {
          "name": "getFood",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nGet food details\n",
          "description": "<p>Get food details</p>\n",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFoodsShortList",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nGet food short list\n",
          "description": "<p>Get food short list</p>\n"
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "SearchBarComponent",
          "type": "component"
        },
        {
          "name": "NutrientsDisplayComponent",
          "type": "component"
        },
        {
          "name": "PageHeaderComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit, signal } from '@angular/core';\nimport {\n  FoodListShortResponse,\n  FoodModel,\n  FoodResponse,\n  FoodShortModel,\n} from '@models/food.model';\nimport { ApiService } from '@services/api.service';\nimport { FoodStore } from '../food-state/food.state';\nimport { httpResource } from '@angular/common/http';\nimport { SearchBarComponent } from '@shared/components/search-bar/search-bar.component';\nimport { NutrientsDisplayComponent } from '@shared/components/nutriens-display/nutrients-display.component';\nimport { PageHeaderComponent } from '../../shared/components/page-header/page-header.component';\n\n@Component({\n  selector: 'app-food-search',\n  imports: [\n    CommonModule,\n    SearchBarComponent,\n    NutrientsDisplayComponent,\n    PageHeaderComponent,\n  ],\n  templateUrl: './food-search.component.html',\n  styleUrl: './food-search.component.scss',\n})\nexport class FoodSearchComponent implements OnInit {\n  apiService = inject(ApiService);\n  foodStore = inject(FoodStore);\n  foodData = signal<FoodModel>({} as FoodModel);\n  foodSearchList = signal<FoodShortModel[]>([] as FoodShortModel[]);\n\n  ngOnInit(): void {\n    //TODO: Move to secure layout\n    // 1. Call the food state and check if the list is there\n    if (this.foodStore.foodShortList.length === 0) {\n      // 2. If the list is empty, call the getFoodsShortList method\n      this.getFoodsShortList();\n      this.foodSearchList.set(this.foodStore.foodShortList());\n    }\n  }\n\n  //TODO: Refactor to service call\n  readonly postsResource = httpResource<unknown>(\n    {\n      url: 'http://localhost:3000/api/v1/nutrition',\n      method: 'GET',\n    },\n    {\n      // Optional configuration\n      defaultValue: [],\n    },\n  );\n\n  /**\n   * Get food details\n   */\n  getFood(id: string): void {\n    this.apiService.getFood(id).subscribe((food: FoodResponse) => {\n      this.foodData.set(food.data);\n    });\n  }\n\n  //TODO: Move call to secure layout\n  /**\n   * Get food short list\n   */\n  getFoodsShortList(): void {\n    this.apiService\n      .getFoodsShortList()\n      .subscribe((foodSearchList: FoodListShortResponse) => {\n        this.foodSearchList.set(foodSearchList.data);\n        this.foodStore.setFoodShortList(foodSearchList.data);\n      });\n  }\n}\n",
      "styleUrl": "./food-search.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"food-search\">\n  <app-page-header title=\"Food Search\" />\n  <app-search-bar\n    [options]=\"foodSearchList()\"\n    (chosenOption)=\"getFood($event)\"\n  />\n  <app-nutrients-display [nutrientData]=\"foodData()\" />\n</div>\n"
    },
    {
      "name": "GenderPickerComponent",
      "id": "component-GenderPickerComponent-f1485ad03b5acf61b2f441494d18cafc62a7f6756a2d0f53d6d48ced4c2f96690a840ae432fc238782fc086be92450424728fa56ea6d674824639ba8237a6d10",
      "file": "src/app/features/dashboard/gender-picker/gender-picker.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-gender-picker",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./gender-picker.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "genders",
          "defaultValue": "[\n    { value: 'male', viewValue: 'Male' },\n    { value: 'female', viewValue: 'Female' },\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatSelectModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-gender-picker',\n  imports: [MatFormFieldModule, MatSelectModule, MatInputModule, FormsModule],\n  templateUrl: './gender-picker.component.html',\n  styleUrl: './gender-picker.component.scss',\n})\nexport class GenderPickerComponent {\n  genders = [\n    { value: 'male', viewValue: 'Male' },\n    { value: 'female', viewValue: 'Female' },\n  ];\n}\n",
      "styleUrl": "./gender-picker.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<mat-form-field>\n  <mat-label>Select gender</mat-label>\n  <mat-select>\n    @for (gender of genders; track gender) {\n      <mat-option [value]=\"gender.value\">{{ gender.viewValue }}</mat-option>\n    }\n  </mat-select>\n</mat-form-field>\n"
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
      "file": "src/stories/header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-header",
      "styleUrls": ["./header.css"],
      "styles": [],
      "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "user",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "User | null",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onCreateAccount",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "EventEmitter"
        },
        {
          "name": "onLogin",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "EventEmitter"
        },
        {
          "name": "onLogout",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
          "styleUrl": "./header.css"
        }
      ],
      "stylesData": "",
      "extends": []
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-ce8e416c2176edb9d327e032d8fe6112e2be820b55d7ca0b7936a66b2b8bbd578b33086e0c33b853cdcff6a17354cd1caf460b642a2c03731a8dc1a85d98543a-1",
      "file": "src/app/shared/components/header/header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "toggleSideNav",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 15,
          "required": false
        }
      ],
      "propertiesClass": [
        {
          "name": "globalStore",
          "defaultValue": "inject(GlobalStore)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "toggleSideNav",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 15,
          "required": false
        }
      ],
      "methodsClass": [
        {
          "name": "onLogout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        },
        {
          "name": "onToggleSideNav",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "MatToolbarModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, output } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { GlobalStore } from 'app/state/global.state';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule],\r\n  templateUrl: './header.component.html',\r\n  styleUrl: './header.component.scss',\r\n})\r\nexport class HeaderComponent {\r\n  globalStore = inject(GlobalStore);\r\n  toggleSideNav = output();\r\n\r\n  /**\r\n   *\r\n   */\r\n  onLogout(): void {\r\n    this.globalStore.logout();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  onToggleSideNav(): void {\r\n    this.toggleSideNav.emit();\r\n  }\r\n}\r\n",
      "styleUrl": "./header.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HeaderComponent-1",
      "templateData": "<mat-toolbar>\n  <div class=\"header-container\">\n    <div class=\"header-logo-wrapper\">\n      <button\n        mat-icon-button\n        aria-label=\"Menu button\"\n        (click)=\"onToggleSideNav()\"\n      >\n        <mat-icon class=\"icon-menu\">menu</mat-icon>\n      </button>\n      <h1>Parsley</h1>\n    </div>\n    <div class=\"example-spacer\"></div>\n    <button mat-raised-button aria-label=\"Logout button\" (click)=\"onLogout()\">\n      <mat-icon class=\"app-mat-icon-scale-1\">logout</mat-icon> Logout\n    </button>\n  </div>\n</mat-toolbar>\n"
    },
    {
      "name": "LoginFormComponent",
      "id": "component-LoginFormComponent-996807df959ae61230d3b0b1c639f91a8bcef55238bb70f1f351c0535155fcacd4b808639ea0ed0044271d9243321fe83f77bf0bdfb9852ab22199b55365b2d4",
      "file": "src/app/features/auth-page/login-form/login-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-login-form",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./login-form.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "authAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 36,
          "required": false
        }
      ],
      "propertiesClass": [
        {
          "name": "authAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 36,
          "required": false
        },
        {
          "name": "authForm",
          "defaultValue": "this.initializeForm()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<AuthFormControls>",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "authFormTypes",
          "defaultValue": "AuthFormType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "formBuilder",
          "defaultValue": "inject(FormBuilder)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormBuilder",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "pwdHide",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [
        {
          "name": "initializeForm",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "tagName": {
                "pos": 1239,
                "end": 1246,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "onLogin",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatCardModule",
          "type": "module"
        },
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, output } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthAction, AuthFormControls } from '@models/auth-form.model';\r\nimport { AuthFormType } from '../../../core/models/auth-form.model';\r\n@Component({\r\n  selector: 'app-login-form',\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n  templateUrl: './login-form.component.html',\r\n  styleUrl: './login-form.component.scss',\r\n})\r\nexport class LoginFormComponent {\r\n  formBuilder: FormBuilder = inject(FormBuilder);\r\n  authForm: FormGroup<AuthFormControls> = this.initializeForm();\r\n  pwdHide = false;\r\n  authFormTypes: typeof AuthFormType = AuthFormType;\r\n  authAction = output<AuthAction>();\r\n\r\n  /**\r\n   *\r\n   * @returns\r\n   */\r\n  private initializeForm() {\r\n    return this.formBuilder?.group<AuthFormControls>({\r\n      email: new FormControl('test@123.com', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      password: new FormControl('1111!Qaa', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  get emailError(): boolean {\r\n    return this.authForm.controls.email?.invalid || false;\r\n  }\r\n\r\n  get passwordError(): boolean {\r\n    return this.authForm.controls.password?.invalid || false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  onLogin(): void {\r\n    if (this.authForm.valid) {\r\n      const formData = this.authForm.value;\r\n      this.authAction.emit({\r\n        type: this.authFormTypes.LOGIN,\r\n        payload: { email: formData.email!, password: formData.password! },\r\n      });\r\n    }\r\n  }\r\n}\r\n",
      "styleUrl": "./login-form.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "accessors": {
        "emailError": {
          "name": "emailError",
          "getSignature": {
            "name": "emailError",
            "type": "boolean",
            "returnType": "boolean",
            "line": 52
          }
        },
        "passwordError": {
          "name": "passwordError",
          "getSignature": {
            "name": "passwordError",
            "type": "boolean",
            "returnType": "boolean",
            "line": 56
          }
        }
      },
      "templateData": "<mat-card class=\"login-form\">\r\n  <mat-card-header>\r\n    <mat-card-title>Login</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <!-- Login form -->\r\n    <form [formGroup]=\"authForm\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput formControlName=\"email\" type=\"email\" />\r\n        @if (emailError) {\r\n          <mat-error> Please enter a valid email address </mat-error>\r\n        }\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          formControlName=\"password\"\r\n          [type]=\"pwdHide ? 'text' : 'password'\"\r\n        />\r\n        @if (passwordError) {\r\n          <mat-error> Password is required </mat-error>\r\n        }\r\n        <button\r\n          mat-icon-button\r\n          matSuffix\r\n          (click)=\"pwdHide = !pwdHide\"\r\n          [attr.aria-label]=\"'Hide password'\"\r\n        >\r\n          <mat-icon>{{ pwdHide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      (click)=\"onLogin()\"\r\n      (keypress)=\"onLogin()\"\r\n      [disabled]=\"!authForm.valid\"\r\n    >\r\n    <mat-icon class=\"app-mat-icon-scale-1\">login</mat-icon>Login\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n"
    },
    {
      "name": "LoginLayoutComponent",
      "id": "component-LoginLayoutComponent-8675e9cd01c28a3edd5435623737d5d04ca40dac7bc99fbba7783afc4d4b7d61d881007df7103005bab2cc8aae1f4201afb2676c3642e4403142fd6a6aee46ab",
      "file": "src/app/layout/login-layout/login-layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-login-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./login-layout.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "AuthPageComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthPageComponent } from \"../../features/auth-page/auth-page.component\";\r\n\r\n@Component({\r\n  selector: 'app-login-layout',\r\n  templateUrl: './login-layout.component.html',\r\n  styleUrl: './login-layout.component.scss',\r\n  imports: [AuthPageComponent]\r\n})\r\nexport class LoginLayoutComponent {\r\n\r\n}\r\n",
      "styleUrl": "./login-layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<app-auth-page/>\r\n"
    },
    {
      "name": "MealBoardComponent",
      "id": "component-MealBoardComponent-a0259179ffeedb7cc5ccba6f762d63bba42b88320ff00b30a1036edb8f96edb1a97ddd37dd564ec88925a3b0f74609ce66b629e88ac905c15bf179654fcbea75",
      "file": "src/app/features/meal-board/meal-board.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-meal-board",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./meal-board.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-meal-board',\r\n  imports: [],\r\n  templateUrl: './meal-board.component.html',\r\n  styleUrl: './meal-board.component.scss',\r\n})\r\nexport class MealBoardComponent {}\r\n",
      "styleUrl": "./meal-board.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>meal-board works!</p>\r\n"
    },
    {
      "name": "MealCardComponent",
      "id": "component-MealCardComponent-26f672b3866b33841902160726bad91b0c2bfae539a629b4ef849d0bf619fa86302bdba462f6ed99843d8366f1e94763da340f5e90b3e415c63e8710f6d702d1",
      "file": "src/app/shared/components/meal-card/meal-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-meal-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./meal-card.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-meal-card',\n  imports: [],\n  templateUrl: './meal-card.component.html',\n  styleUrl: './meal-card.component.scss',\n})\nexport class MealCardComponent {}\n",
      "styleUrl": "./meal-card.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>meal-card works!</p>\n"
    },
    {
      "name": "MealStatisticsComponent",
      "id": "component-MealStatisticsComponent-ae3523ce07746d04586ac58d818456a9d07b4d9c6ccb8fc6f34db98fef2cf159d8906f6d7cfe009fc69adc42e2c90ae3268951bffe7cb797b9c52726d959e05b",
      "file": "src/app/features/meal-statistics/meal-statistics.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-meal-statistics",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./meal-statistics.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-meal-statistics',\r\n  imports: [],\r\n  templateUrl: './meal-statistics.component.html',\r\n  styleUrl: './meal-statistics.component.scss',\r\n})\r\nexport class MealStatisticsComponent {}\r\n",
      "styleUrl": "./meal-statistics.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>meal-statistics works!</p>\r\n"
    },
    {
      "name": "NotFoundComponent",
      "id": "component-NotFoundComponent-d80cda01bda29da831593dc58ae63932e3b358e686024929fdd160235c27766682d3bafb02da51e4cb1e327a7d4e4218191720fc5364dc529f5549ba7474eaa4",
      "file": "src/app/layout/not-found/not-found.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-not-found",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./not-found.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  imports: [],\r\n  templateUrl: './not-found.component.html',\r\n  styleUrl: './not-found.component.scss'\r\n})\r\nexport class NotFoundComponent {\r\n\r\n}\r\n",
      "styleUrl": "./not-found.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>not-found works!</p>\r\n"
    },
    {
      "name": "NutrientsDisplayComponent",
      "id": "component-NutrientsDisplayComponent-9f26ab92ba51f74d99154386808054434c1460346132a83a6b77d9ab16d7301c41b47c9b68a1bbbf0f51bce161216f65e9aefac24f5baec876af75df1e4e97a1",
      "file": "src/app/shared/components/nutriens-display/nutrients-display.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-nutrients-display",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./nutrients-display.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "nutrientData",
          "defaultValue": "input<FoodModel>({} as FoodModel)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, input } from '@angular/core';\r\nimport { FoodModel } from '@models/food.model';\r\n\r\n@Component({\r\n  selector: 'app-nutrients-display',\r\n  imports: [],\r\n  templateUrl: './nutrients-display.component.html',\r\n  styleUrl: './nutrients-display.component.scss',\r\n})\r\nexport class NutrientsDisplayComponent {\r\n  nutrientData = input<FoodModel>({} as FoodModel);\r\n}\r\n",
      "styleUrl": "./nutrients-display.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<!-- nutrient-list.component.html -->\n<div class=\"nutrient-container\">\n  @if (nutrientData().name) {\n    <h2>Name: {{ nutrientData().name }}</h2>\n    <div class=\"columns-container\">\n      <!-- Other Nutrients Column -->\n      <div class=\"column other\">\n        <h3>Nutrients</h3>\n        <ul class=\"nutrient-list\">\n          <li><strong>Calories:</strong> {{ nutrientData().calories }} kcal</li>\n          <li><strong>Water Content:</strong> {{ nutrientData().water }} %</li>\n          <li>\n            <strong>Total Protein:</strong>\n            {{ nutrientData().macroNutrients.protein.total }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Animal Protein:</strong>\n            {{ nutrientData().macroNutrients.protein.animal }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Plant Protein:</strong>\n            {{ nutrientData().macroNutrients.protein.plant }} g\n          </li>\n          <li>\n            <strong>Total Fats:</strong>\n            {{ nutrientData().macroNutrients.fats.total }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Saturated Fats:</strong>\n            {{ nutrientData().macroNutrients.fats.saturated }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Monounsaturated Fats:</strong>\n            {{ nutrientData().macroNutrients.fats.monounsaturated }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Polyunsaturated Fats:</strong>\n            {{ nutrientData().macroNutrients.fats.polyunsaturated }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Trans Fats:</strong>\n            {{ nutrientData().macroNutrients.fats.trans }} g\n          </li>\n          <li>\n            <strong>Total Carbohydrates:</strong>\n            {{ nutrientData().macroNutrients.carbohydrates }} g\n          </li>\n          <li>\n            <strong>Total Sugars:</strong>\n            {{ nutrientData().macroNutrients.sugars.total }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Glucose:</strong>\n            {{ nutrientData().macroNutrients.sugars.glucose }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Fructose:</strong>\n            {{ nutrientData().macroNutrients.sugars.fructose }} g\n          </li>\n          <li>\n            <strong class=\"list-item-margin-left\">Sucrose:</strong>\n            {{ nutrientData().macroNutrients.sugars.sucrose }} g\n          </li>\n          <li>\n            <strong>Fiber:</strong> {{ nutrientData().macroNutrients.fiber }} g\n          </li>\n          <li>\n            <strong>Cholesterol:</strong>\n            {{ nutrientData().macroNutrients.cholesterol }} mg\n          </li>\n          <li>\n            <strong>Glycemic Index:</strong> {{ nutrientData().glycemic_index }}\n          </li>\n        </ul>\n      </div>\n      <!-- Minerals Column -->\n      <div class=\"column minerals\">\n        <h3>Minerals</h3>\n        <ul class=\"nutrient-list\">\n          <li>\n            <strong>Potassium: </strong>\n            {{ nutrientData().minerals.potassium }} mg\n          </li>\n          <li>\n            <strong>Calcium: </strong> {{ nutrientData().minerals.calcium }} mg\n          </li>\n          <li>\n            <strong>Magnesium: </strong>\n            {{ nutrientData().minerals.magnesium }} mg\n          </li>\n          <li>\n            <strong>Phosphorus: </strong>\n            {{ nutrientData().minerals.phosphorus }} mg\n          </li>\n          <li>\n            <strong>Sodium: </strong> {{ nutrientData().minerals.sodium }} mg\n          </li>\n          <li><strong>Iron :</strong> {{ nutrientData().minerals.iron }} mg</li>\n          <li><strong>Zinc: </strong> {{ nutrientData().minerals.zinc }} mg</li>\n          <li>\n            <strong>Copper: </strong> {{ nutrientData().minerals.copper }} mg\n          </li>\n          <li>\n            <strong>Manganese:</strong>\n            {{ nutrientData().minerals.manganese }} mg\n          </li>\n          <li>\n            <strong>Selenium:</strong> {{ nutrientData().minerals.selenium }} mg\n          </li>\n          <li>\n            <strong>Iodine:</strong> {{ nutrientData().minerals.iodine }} mg\n          </li>\n          <li>\n            <strong>Fluoride:</strong> {{ nutrientData().minerals.fluoride }} mg\n          </li>\n          <li>\n            <strong>Chromium:</strong> {{ nutrientData().minerals.chromium }} mg\n          </li>\n          <li>\n            <strong>Molybdenum:</strong>\n            {{ nutrientData().minerals.molybdenum }} mg\n          </li>\n        </ul>\n      </div>\n\n      <!-- Vitamins Column -->\n      <div class=\"column vitamins\">\n        <h3>Vitamins</h3>\n        <ul class=\"nutrient-list\">\n          <li>\n            <strong>Vitamin C:</strong>\n            {{ nutrientData().vitamins.vitamin_C }} mg\n          </li>\n          <li>\n            <strong>Vitamin A:</strong>\n            {{ nutrientData().vitamins.vitamin_A.total }} mg\n          </li>\n          <li>\n            <strong>Vitamin E:</strong>\n            {{ nutrientData().vitamins.vitamin_E }} mg\n          </li>\n          <li>\n            <strong>Vitamin K:</strong>\n            {{ nutrientData().vitamins.vitamin_K }} mg\n          </li>\n          <li>\n            <strong>B1 Thiamine:</strong>\n            {{ nutrientData().vitamins.B1_thiamine }} mg\n          </li>\n          <li>\n            <strong>B2 Riboflavin:</strong>\n            {{ nutrientData().vitamins.B2_riboflavin }} mg\n          </li>\n          <li>\n            <strong>B3 Niacin:</strong>\n            {{ nutrientData().vitamins.B3_niacin }} mg\n          </li>\n          <li>\n            <strong>B5 Pantothenic Acid: </strong>\n            {{ nutrientData().vitamins.B5_pantothenic_acid }} mg\n          </li>\n          <li>\n            <strong>B6 Pyridoxine:</strong>\n            {{ nutrientData().vitamins.B6_pyridoxine }} mg\n          </li>\n          <li>\n            <strong>B7 Biotin:</strong>\n            {{ nutrientData().vitamins.B7_biotin }} mg\n          </li>\n          <li>\n            <strong>B9 Folic Acid:</strong>\n            {{ nutrientData().vitamins.B9_folic_acid }} mg\n          </li>\n          <li>\n            <strong>B12 Cobalamin:</strong>\n            {{ nutrientData().vitamins.B12_cobalamin }} mg\n          </li>\n          <li>\n            <strong>Vitamin D:</strong>\n            {{ nutrientData().vitamins.vitamin_D }} mg\n          </li>\n        </ul>\n      </div>\n    </div>\n  }\n</div>\n"
    },
    {
      "name": "PageComponent",
      "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
      "file": "src/stories/page.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-page",
      "styleUrls": ["./page.css"],
      "styles": [],
      "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "user",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "User | null",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 69
        }
      ],
      "methodsClass": [
        {
          "name": "doCreateAccount",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "doLogin",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "doLogout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "HeaderComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
          "styleUrl": "./page.css"
        }
      ],
      "stylesData": "",
      "extends": []
    },
    {
      "name": "PageHeaderComponent",
      "id": "component-PageHeaderComponent-292c9cb2ebc191edfce55148b6c6c9c2abac3fe39233dfc73cce1ca7311cc0d049e3d55da4be7f813454eb8ea32f063d391399a5b06a28bc4550990089f8d56d",
      "file": "src/app/shared/components/page-header/page-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-page-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./page-header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "title",
          "defaultValue": "input<string>('Page Header Title')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  imports: [],\n  templateUrl: './page-header.component.html',\n  styleUrl: './page-header.component.scss',\n})\nexport class PageHeaderComponent {\n  title = input<string>('Page Header Title');\n}\n",
      "styleUrl": "./page-header.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<h1>{{ title() }}</h1>\n"
    },
    {
      "name": "RecipesComponent",
      "id": "component-RecipesComponent-b1a690ac2f793f48c2f14e08aa6ee1e04971496996aec56a35f65ad5e82805e131089dc0e2bb9820104d3c2800d0ad0166d01eb207a265dd3cf2434ae40ebd67",
      "file": "src/app/features/recipes/recipes.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-recipes",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./recipes.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recipes',\r\n  imports: [],\r\n  templateUrl: './recipes.component.html',\r\n  styleUrl: './recipes.component.scss',\r\n})\r\nexport class RecipesComponent {}\r\n",
      "styleUrl": "./recipes.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>recipes works!</p>\r\n"
    },
    {
      "name": "SearchBarComponent",
      "id": "component-SearchBarComponent-788efce6e0b262b2e144f7165de2c898e4cc8cbf7103ba4ca33ebb48489d3557f8d8f6b1141b0df99b9b991c21914a1af27f85a788edfdf20425e414fbca0401",
      "file": "src/app/shared/components/search-bar/search-bar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-search-bar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./search-bar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "chosenOption",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [125],
          "required": false
        }
      ],
      "propertiesClass": [
        {
          "name": "buttonText",
          "defaultValue": "input<string>('Search')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [125]
        },
        {
          "name": "chosenOption",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [125],
          "required": false
        },
        {
          "name": "filteredOptions$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<literal type[]>",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [125]
        },
        {
          "name": "foodControl",
          "defaultValue": "new FormControl<string>('')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [125]
        },
        {
          "name": "inputLabelText",
          "defaultValue": "input<string>('Pick food')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 39,
          "modifierKind": [125]
        },
        {
          "name": "inputPlaceholderText",
          "defaultValue": "input<string>('Food')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [125]
        },
        {
          "name": "options",
          "defaultValue": "input<{ id: string; name: string }[]>([])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [125]
        }
      ],
      "methodsClass": [
        {
          "name": "checkIfNameIsOnList",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "tagName": {
                "pos": 1869,
                "end": 1876,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "literal type[]",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nSearching the name\n",
          "description": "<p>Searching the name</p>\n",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": {
                "pos": 2070,
                "end": 2075,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "value"
              },
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "pos": 2064,
                "end": 2069,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "param"
              },
              "comment": ""
            },
            {
              "tagName": {
                "pos": 2082,
                "end": 2089,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "getIdByName",
          "args": [
            {
              "name": "name",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string | undefined",
          "typeParameters": [],
          "line": 98,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nGet the id by name\n",
          "description": "<p>Get the id by name</p>\n",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "name",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getOption",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 84,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [125]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatAutocompleteModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  input,\n  output,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { map, Observable, startWith } from 'rxjs';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  standalone: true,\n  selector: 'app-search-bar',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    CommonModule,\n  ],\n  templateUrl: './search-bar.component.html',\n  styleUrl: './search-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBarComponent implements AfterViewInit {\n  public foodControl = new FormControl<string>('');\n  public filteredOptions$!: Observable<{ id: string; name: string }[]>;\n  // outputs\n  public chosenOption = output<string>();\n  //inputs\n  public buttonText = input<string>('Search');\n  public inputLabelText = input<string>('Pick food');\n  public inputPlaceholderText = input<string>('Food');\n  public options = input<{ id: string; name: string }[]>([]);\n\n  // ngAfterViewInit is used because ngOnInit didn't trigger at start the dropdown list\n  ngAfterViewInit(): void {\n    this.filteredOptions$ = this.foodControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this.filter(value || '')),\n    );\n  }\n\n  get isFormValid(): boolean {\n    return (\n      this.foodControl.valid &&\n      this.foodControl.value !== '' &&\n      this.foodControl.value !== null &&\n      this.checkIfNameIsOnList()\n    );\n  }\n\n  /**\n   *\n   * @returns\n   */\n  private checkIfNameIsOnList(): boolean {\n    return this.options().some(\n      (option) => option.name === this.foodControl.value,\n    );\n  }\n\n  /**\n   * Searching the name\n   * @param value\n   * @returns\n   */\n  private filter(value: string): { id: string; name: string }[] {\n    return this.options().filter((option) =>\n      option.name.toLowerCase().startsWith(value.toLowerCase()),\n    );\n  }\n\n  /**\n   *\n   */\n  public getOption(): void {\n    const name = this.foodControl.value;\n    if (name) {\n      const id = this.getIdByName(name);\n      if (id) {\n        this.chosenOption.emit(id);\n        this.foodControl.reset();\n      }\n    }\n  }\n\n  /**\n   * Get the id by name\n   */\n  private getIdByName(name: string): string | undefined {\n    return this.options().find((option) => option.name === name)?.id;\n  }\n}\n",
      "styleUrl": "./search-bar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["AfterViewInit"],
      "accessors": {
        "isFormValid": {
          "name": "isFormValid",
          "getSignature": {
            "name": "isFormValid",
            "type": "boolean",
            "returnType": "boolean",
            "line": 51
          }
        }
      },
      "templateData": "<form class=\"search-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>{{ inputLabelText() }}</mat-label>\r\n    <input\r\n      type=\"text\"\r\n      [placeholder]=\"inputPlaceholderText()\"\r\n      [attr.aria-label]=\"inputLabelText()\"\r\n      matInput\r\n      [formControl]=\"foodControl\"\r\n      [matAutocomplete]=\"auto\"\r\n    />\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n      @let options = filteredOptions$ | async;\r\n      @for (option of options; track option) {\r\n        <mat-option [value]=\"option.name\">{{ option.name }}</mat-option>\r\n      }\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button\r\n    (click)=\"getOption()\"\r\n    mat-flat-button\r\n    class=\"search-button\"\r\n    [disabled]=\"!isFormValid\"\r\n  >\r\n    {{ buttonText() }}\r\n  </button>\r\n</form>\r\n"
    },
    {
      "name": "SecureLayoutComponent",
      "id": "component-SecureLayoutComponent-2570392e11bb56ea55e0e230c95b59b25f606564bfc603aa0f53bc3288392ee164c2f79ee8024201aa7729513293d1010e36db514c1ac2654baff1e1f9b97713",
      "file": "src/app/layout/secure-layout/secure-layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-secure-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./secure-layout.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "drawer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MatSidenav | undefined",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 22,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'drawer'"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "showFiller",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "onToggleSideNav",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nShowing and hiding the side nav\n",
          "description": "<p>Showing and hiding the side nav</p>\n"
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "RouterOutlet"
        },
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "MatSidenavModule",
          "type": "module"
        },
        {
          "name": "SideNavComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ViewChild } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from '@shared/components/header/header.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { SideNavComponent } from '@shared/components/side-nav/side-nav.component';\n@Component({\n  selector: 'app-secure-layout',\n  imports: [\n    RouterOutlet,\n    HeaderComponent,\n    MatButtonModule,\n    MatSidenavModule,\n    SideNavComponent,\n  ],\n  templateUrl: './secure-layout.component.html',\n  styleUrl: './secure-layout.component.scss',\n})\nexport class SecureLayoutComponent {\n  showFiller = false;\n\n  @ViewChild('drawer') drawer: MatSidenav | undefined;\n\n  /**\n   * Showing and hiding the side nav\n   */\n  onToggleSideNav(): void {\n    this.drawer?.toggle();\n  }\n}\n",
      "styleUrl": "./secure-layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<app-header (toggleSideNav)=\"onToggleSideNav()\" />\n<mat-drawer-container class=\"main-container\" [hasBackdrop]=\"true\" autosize>\n  <mat-drawer #drawer class=\"sidenav\" mode=\"side\">\n    <!-- side nav component placeholder -->\n    <app-side-nav />\n  </mat-drawer>\n  <div class=\"content\">\n    <router-outlet />\n  </div>\n</mat-drawer-container>\n"
    },
    {
      "name": "SideNavComponent",
      "id": "component-SideNavComponent-54aadee04b3ad979dec68912f94ac25825d8586bcaa6baeaee75ca5b78cc8a26e986ac093d01585c476fbb3787983293ddd5821f9e809d02b16f2e1f2720101a",
      "file": "src/app/shared/components/side-nav/side-nav.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-side-nav",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./side-nav.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "navRoutesService",
          "defaultValue": "inject(NavRoutesService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "routesForNav",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RouteDataForDisplay[]",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "RouterModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { RouteDataForDisplay } from '@models/route.model';\nimport { NavRoutesService } from '@services/nav-routes.service';\n\n@Component({\n  selector: 'app-side-nav',\n  imports: [CommonModule, RouterModule],\n  templateUrl: './side-nav.component.html',\n  styleUrl: './side-nav.component.scss',\n})\nexport class SideNavComponent implements OnInit {\n  navRoutesService = inject(NavRoutesService);\n  routesForNav: RouteDataForDisplay[] = [];\n\n  ngOnInit(): void {\n    this.routesForNav = this.navRoutesService.routesForNav;\n  }\n}\n",
      "styleUrl": "./side-nav.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"sidenav\">\r\n  <nav>\r\n    <ul>\r\n      @for (route of routesForNav; track route.name) {\r\n        <li>\r\n          <a\r\n            [routerLink]=\"route.path\"\r\n            routerLinkActive=\"active-link\"\r\n            [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          >\r\n            {{ route.name }}\r\n          </a>\r\n        </li>\r\n      }\r\n    </ul>\r\n  </nav>\r\n</div>\r\n"
    },
    {
      "name": "SignupFormComponent",
      "id": "component-SignupFormComponent-b7904c6bc2f4254906857aa02cbde848b1697aacb29be2223ec4b9d3aebfb35131b9abaa83374e390d1f266269888c443949f67cc4d40ca869bf0d5045be2342",
      "file": "src/app/features/auth-page/signup-form/signup-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-signup-form",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./signup-form.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "authAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 45,
          "required": false
        }
      ],
      "propertiesClass": [
        {
          "name": "authAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 45,
          "required": false
        },
        {
          "name": "authForm",
          "defaultValue": "this.initializeForm()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<AuthFormControls>",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "authFormTypes",
          "defaultValue": "AuthFormType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "emailPattern",
          "defaultValue": "'^[a-zA-Z0-9_.±]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [123]
        },
        {
          "name": "formBuilder",
          "defaultValue": "inject(FormBuilder)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormBuilder",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "passwordPattern",
          "defaultValue": "'(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=.*[#$@$!%*?&])(?=[^A-Z]*[A-Z]).{8,30}'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [123]
        },
        {
          "name": "pwdHide",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 43
        }
      ],
      "methodsClass": [
        {
          "name": "checkIfMatchingPasswords",
          "args": [
            {
              "name": "passwordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "passwordConfirmationKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "ValidatorFn",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "passwordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "passwordConfirmationKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "initializeForm",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "tagName": {
                "pos": 1417,
                "end": 1424,
                "kind": 80,
                "id": 0,
                "flags": 16842752,
                "transformFlags": 0,
                "escapedText": "returns"
              },
              "comment": ""
            }
          ]
        },
        {
          "name": "onSignUp",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 118,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\n\n",
          "description": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatCardModule",
          "type": "module"
        },
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, output } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {\r\n  AuthAction,\r\n  AuthFormControls,\r\n  AuthFormType,\r\n} from '@models/auth-form.model';\r\n\r\n@Component({\r\n  selector: 'app-signup-form',\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n  templateUrl: './signup-form.component.html',\r\n  styleUrl: './signup-form.component.scss',\r\n})\r\nexport class SignupFormComponent {\r\n  private passwordPattern =\r\n    '(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=.*[#$@$!%*?&])(?=[^A-Z]*[A-Z]).{8,30}';\r\n  private emailPattern = '^[a-zA-Z0-9_.±]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$';\r\n  formBuilder: FormBuilder = inject(FormBuilder);\r\n  authForm: FormGroup<AuthFormControls> = this.initializeForm();\r\n  pwdHide = false;\r\n  authFormTypes: typeof AuthFormType = AuthFormType;\r\n  authAction = output<AuthAction>();\r\n\r\n  /**\r\n   *\r\n   * @returns\r\n   */\r\n  private initializeForm() {\r\n    return this.formBuilder.group<AuthFormControls>(\r\n      {\r\n        email: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(this.emailPattern),\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(this.passwordPattern),\r\n        ]),\r\n        confirmPassword: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(this.passwordPattern),\r\n        ]),\r\n      },\r\n      {\r\n        validators: this.checkIfMatchingPasswords(\r\n          'password',\r\n          'confirmPassword',\r\n        ),\r\n      },\r\n    );\r\n  }\r\n\r\n  get emailError(): boolean {\r\n    return this.authForm.controls.email?.invalid || false;\r\n  }\r\n\r\n  get passwordError(): boolean {\r\n    return this.authForm.controls.password?.invalid || false;\r\n  }\r\n\r\n  get confirmPasswordError(): boolean {\r\n    return this.authForm.controls.confirmPassword?.invalid || false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  private checkIfMatchingPasswords(\r\n    passwordKey: string,\r\n    passwordConfirmationKey: string,\r\n  ): ValidatorFn {\r\n    return (control: AbstractControl): Record<string, boolean> | null => {\r\n      const formGroup = control as FormGroup;\r\n      if (!formGroup) {\r\n        return { notEquivalent: true };\r\n      }\r\n\r\n      const passwordInput = formGroup.controls[passwordKey];\r\n      const passwordConfirmationInput =\r\n        formGroup.controls[passwordConfirmationKey];\r\n\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        passwordConfirmationInput.setErrors({ notEquivalent: true });\r\n        return { notEquivalent: true };\r\n      } else {\r\n        passwordConfirmationInput.setErrors(null);\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  onSignUp(): void {\r\n    if (this.authForm.valid) {\r\n      const formData = this.authForm.value;\r\n      this.authAction.emit({\r\n        type: this.authFormTypes.SIGNUP,\r\n        payload: { email: formData.email!, password: formData.password! },\r\n      });\r\n    }\r\n  }\r\n}\r\n",
      "styleUrl": "./signup-form.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "accessors": {
        "emailError": {
          "name": "emailError",
          "getSignature": {
            "name": "emailError",
            "type": "boolean",
            "returnType": "boolean",
            "line": 76
          }
        },
        "passwordError": {
          "name": "passwordError",
          "getSignature": {
            "name": "passwordError",
            "type": "boolean",
            "returnType": "boolean",
            "line": 80
          }
        },
        "confirmPasswordError": {
          "name": "confirmPasswordError",
          "getSignature": {
            "name": "confirmPasswordError",
            "type": "boolean",
            "returnType": "boolean",
            "line": 84
          }
        }
      },
      "templateData": "<mat-card class=\"login-form\">\r\n  <mat-card-header>\r\n    <mat-card-title>Sign Up</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <!-- Sign up form -->\r\n    <form [formGroup]=\"authForm\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput formControlName=\"email\" type=\"email\" />\r\n        @if (emailError) {\r\n          <mat-error> Please enter a valid email address </mat-error>\r\n        }\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          formControlName=\"password\"\r\n          [type]=\"pwdHide ? 'text' : 'password'\"\r\n        />\r\n        <button\r\n          mat-icon-button\r\n          matSuffix\r\n          (click)=\"pwdHide = !pwdHide\"\r\n          [attr.aria-label]=\"'Hide password'\"\r\n        >\r\n          <mat-icon>{{ pwdHide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        </button>\r\n        @if (passwordError) {\r\n          <mat-error>\r\n            Require min. 8 characters including special character, number,\r\n            uppercase\r\n          </mat-error>\r\n        }\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Confirm password</mat-label>\r\n        <input\r\n          matInput\r\n          formControlName=\"confirmPassword\"\r\n          [type]=\"pwdHide ? 'text' : 'password'\"\r\n        />\r\n        @if (confirmPasswordError) {\r\n          <mat-error> Passwords are not matching </mat-error>\r\n        }\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      (click)=\"onSignUp()\"\r\n      (keypress)=\"onSignUp()\"\r\n      [disabled]=\"!authForm.valid\"\r\n    >\r\n      <mat-icon class=\"app-mat-icon-scale-1\"> add_circle_outline </mat-icon> Sign Up\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n"
    },
    {
      "name": "SpinnerComponent",
      "id": "component-SpinnerComponent-aa9b7b7f581922ef3cbcaeb7f1e8bbd09b75785a7691c21339cbe6cf3425b4f140544d993bd98a06e2ee0816256333b5e3aa9e6050133945c08604d05c766c46",
      "file": "src/app/shared/components/spinner/spinner.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-spinner",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./spinner.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [
        {
          "name": "MatProgressSpinnerModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  imports: [MatProgressSpinnerModule],\r\n  templateUrl: './spinner.component.html',\r\n  styleUrl: './spinner.component.scss'\r\n})\r\nexport class SpinnerComponent {\r\n\r\n}\r\n",
      "styleUrl": "./spinner.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<mat-spinner [diameter]=\"50\"></mat-spinner>\r\n\r\n"
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "addToken",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/auth.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(request: HttpRequest<unknown>, token: string): HttpRequest<unknown> => {\r\n  return request.clone({\r\n    setHeaders: {\r\n      'authorization': 'Bearer ' + token,\r\n    },\r\n  });\r\n}"
      },
      {
        "name": "ApiRoutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/data/constants/api-routes.constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    REGISTER: '/auth/register',\r\n    LOGOUT: '/auth/logout',\r\n    FORGOT_PASSWORD: '/auth/forgot-password',\r\n  },\r\n}"
      },
      {
        "name": "appConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ApplicationConfig",
        "defaultValue": "{\r\n  providers: [\r\n    provideAnimationsAsync(),\r\n    provideStore(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideHttpClient(\r\n      withFetch(),\r\n      withInterceptors([authInterceptor, errorInterceptor]),\r\n    ),\r\n  ],\r\n}"
      },
      {
        "name": "authGuard",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/guards/auth.guard.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "CanMatchFn",
        "defaultValue": "() => {\r\n  const router = inject(Router);\r\n  const isUserValid = inject(AuthService);\r\n  if (isUserValid.getBearerToken) return true;\r\n  router.navigate(['/login']);\r\n  return false;\r\n}"
      },
      {
        "name": "authInterceptor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/auth.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "HttpInterceptorFn",
        "defaultValue": "(req: HttpRequest<unknown>,\r\n  next: HttpHandlerFn) => {\r\n  const globalStore = inject(GlobalStore);\r\n  const router = inject(Router);\r\n  const authService = inject(AuthService);\r\n  const token = authService.getBearerToken;\r\n\r\n  if (!req.url.includes('login')) {\r\n    if (req.url.startsWith(environment.apiUrl) && token) {\r\n      req = addToken(req, token);\r\n    } else {\r\n      router.navigate(['/login']);\r\n      authService.resetToken();\r\n      globalStore.clearState();\r\n      return EMPTY;\r\n    }\r\n  }\r\n\r\n  return next(req).pipe(\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401 && error.error.message === 'Access Denied. Invalid token.') {\r\n        if (!isRefreshing) {\r\n          isRefreshing = true;\r\n          tokenSubject.next(null);\r\n          return authService.refreshToken().pipe(\r\n            switchMap((res: { token: string }) => {\r\n              //Saving new token\r\n              authService.setBearerToken = res.token;\r\n              isRefreshing = false;\r\n              tokenSubject.next(res.token);\r\n              return next(addToken(req, res.token));\r\n            }),\r\n            catchError((error) => {\r\n              isRefreshing = false;\r\n              router.navigate(['/login']);\r\n              authService.resetToken();\r\n              globalStore.clearState();\r\n              return throwError(() => error);\r\n            })\r\n          );\r\n        } else {\r\n          return tokenSubject.pipe(\r\n            filter((token: string | null) => token != null),\r\n            take(1),\r\n            switchMap((token) => next(addToken(req, token))),\r\n          );\r\n        }\r\n      }\r\n      return throwError(() => error);\r\n    })\r\n  );\r\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.development.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api/v1'\r\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  production: true,\r\n  apiUrl: ''\r\n}"
      },
      {
        "name": "errorInterceptor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/error.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "HttpInterceptorFn",
        "defaultValue": "(\r\n  req: HttpRequest<unknown>,\r\n  next: HttpHandlerFn,\r\n) => {\r\n  const snackBar = inject(MatSnackBar);\r\n  return next(req).pipe(\r\n    tap({\r\n      // Handle successful responses\r\n      next: (event) => {\r\n        if (\r\n          event instanceof HttpResponse &&\r\n          (event.status === 200 || event.status === 201)\r\n        ) {\r\n          snackBar.open('Operation successful', 'Close', {\r\n            duration: 3000,\r\n            panelClass: 'success-snack',\r\n            horizontalPosition: 'right',\r\n          });\r\n        }\r\n      },\r\n    }),\r\n    catchError((err: HttpErrorResponse) => {\r\n      let errorMessage = '';\r\n\r\n      if (err && err.error.error && err.error.error.message) {\r\n        errorMessage = err.error.error.message + ' ' + err.error.error.details;\r\n      } else {\r\n        errorMessage = getErrorMessage(err);\r\n      }\r\n\r\n      snackBar.open(errorMessage, 'Close', {\r\n        duration: 5000,\r\n        panelClass: 'error-snack',\r\n        horizontalPosition: 'right',\r\n      });\r\n      return throwError(() => err);\r\n    }),\r\n  );\r\n}"
      },
      {
        "name": "FoodStore",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/food-state/food.state.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "signalStore(\r\n  { providedIn: 'root' },\r\n  withState<FoodState>(initialFoodState),\r\n  withDevtools('foodStore'),\r\n  withMethods((store) => ({\r\n    stateInit: (): void => {\r\n      patchState(store);\r\n    },\r\n    clearState: (): void => {\r\n      patchState(store, initialFoodState);\r\n    },\r\n    setFoodShortList(foodShortList: FoodShortModel[]): void {\r\n      patchState(store, { foodShortList });\r\n    },\r\n  })),\r\n  withHooks({\r\n    onInit: ({ stateInit }): void => {\r\n      stateInit();\r\n    },\r\n  }),\r\n)"
      },
      {
        "name": "getErrorMessage",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/error.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(error: HttpErrorResponse): string => {\r\n  switch (error.status) {\r\n    case 400:\r\n      return 'Invalid request';\r\n    case 401:\r\n      return 'Unauthorized';\r\n    case 403:\r\n      return 'Access denied';\r\n    case 500:\r\n      return 'Server error occurred';\r\n    default:\r\n      return 'An unexpected error occurred';\r\n  }\r\n}"
      },
      {
        "name": "GlobalStore",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/state/global.state.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "signalStore(\r\n  { providedIn: 'root' },\r\n  withState<GlobalState>(initialGlobalState),\r\n  withDevtools('globalStore'),\r\n  withMethods(\r\n    (store, authService = inject(AuthService), router = inject(Router)) => ({\r\n      stateInit: (): void => {\r\n        patchState(store, { appInit: true });\r\n      },\r\n      clearState: (): void => {\r\n        patchState(store, initialGlobalState);\r\n      },\r\n      loginUser: (email: string, password: string): void => {\r\n        patchState(store, {\r\n          isLoading: true,\r\n        });\r\n        authService.loginUser(email, password).subscribe({\r\n          next: () => {\r\n            patchState(store, {\r\n              isLoading: false,\r\n              error: null,\r\n              isUserAuthorized: true,\r\n            });\r\n            router.navigate(['/layout/dashboard']);\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            patchState(store, { isLoading: false, error: err });\r\n            console.error(err);\r\n          },\r\n        });\r\n      },\r\n      signUpNewUser: (email: string, password: string): void => {\r\n        patchState(store, {\r\n          isLoading: true,\r\n          isSignup: false,\r\n        });\r\n        authService.signUpNewUser(email, password).subscribe({\r\n          next: () => {\r\n            patchState(store, {\r\n              isLoading: false,\r\n              error: null,\r\n              isSignup: true,\r\n            });\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            patchState(store, { isLoading: false, error: err });\r\n          },\r\n        });\r\n      },\r\n      logout: (): void => {\r\n        authService.logout().subscribe({\r\n          next: () => {\r\n            patchState(store, initialGlobalState);\r\n            router.navigate(['/login']);\r\n            authService.resetToken();\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            console.log(err);\r\n            patchState(store, initialGlobalState);\r\n            router.navigate(['/login']);\r\n            authService.resetToken();\r\n          },\r\n        });\r\n      },\r\n    }),\r\n  ),\r\n  withHooks({\r\n    onInit: ({ stateInit }): void => {\r\n      stateInit();\r\n    },\r\n    onDestroy: ({ clearState }): void => {\r\n      clearState();\r\n    },\r\n  }),\r\n)"
      },
      {
        "name": "initialFoodState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/food-state/food.state.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "signalState<FoodState>({\r\n  foodShortList: [] as FoodShortModel[],\r\n  error: null,\r\n})"
      },
      {
        "name": "initialGlobalState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/state/global.state.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "signalState<GlobalState>({\r\n  appInit: false,\r\n  isLoading: false,\r\n  isUserAuthorized: false,\r\n  isSignup: false,\r\n  bearerToken: null,\r\n  error: null,\r\n})"
      },
      {
        "name": "isRefreshing",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/auth.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "false"
      },
      {
        "name": "tokenSubject",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/interceptors/auth.interceptor.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new BehaviorSubject<string | null>(null)"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "AuthFormControls",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "ToFormGroup<AuthForm>",
        "file": "src/app/core/models/auth-form.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "ToFormGroup",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/core/models/auth-form.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 200
      }
    ],
    "enumerations": [
      {
        "name": "AuthFormType",
        "childs": [
          {
            "name": "LOGIN",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "login"
          },
          {
            "name": "SIGNUP",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "signup"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/core/models/auth-form.model.ts"
      }
    ],
    "groupedVariables": {
      "src/app/core/interceptors/auth.interceptor.ts": [
        {
          "name": "addToken",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/auth.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(request: HttpRequest<unknown>, token: string): HttpRequest<unknown> => {\r\n  return request.clone({\r\n    setHeaders: {\r\n      'authorization': 'Bearer ' + token,\r\n    },\r\n  });\r\n}"
        },
        {
          "name": "authInterceptor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/auth.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HttpInterceptorFn",
          "defaultValue": "(req: HttpRequest<unknown>,\r\n  next: HttpHandlerFn) => {\r\n  const globalStore = inject(GlobalStore);\r\n  const router = inject(Router);\r\n  const authService = inject(AuthService);\r\n  const token = authService.getBearerToken;\r\n\r\n  if (!req.url.includes('login')) {\r\n    if (req.url.startsWith(environment.apiUrl) && token) {\r\n      req = addToken(req, token);\r\n    } else {\r\n      router.navigate(['/login']);\r\n      authService.resetToken();\r\n      globalStore.clearState();\r\n      return EMPTY;\r\n    }\r\n  }\r\n\r\n  return next(req).pipe(\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401 && error.error.message === 'Access Denied. Invalid token.') {\r\n        if (!isRefreshing) {\r\n          isRefreshing = true;\r\n          tokenSubject.next(null);\r\n          return authService.refreshToken().pipe(\r\n            switchMap((res: { token: string }) => {\r\n              //Saving new token\r\n              authService.setBearerToken = res.token;\r\n              isRefreshing = false;\r\n              tokenSubject.next(res.token);\r\n              return next(addToken(req, res.token));\r\n            }),\r\n            catchError((error) => {\r\n              isRefreshing = false;\r\n              router.navigate(['/login']);\r\n              authService.resetToken();\r\n              globalStore.clearState();\r\n              return throwError(() => error);\r\n            })\r\n          );\r\n        } else {\r\n          return tokenSubject.pipe(\r\n            filter((token: string | null) => token != null),\r\n            take(1),\r\n            switchMap((token) => next(addToken(req, token))),\r\n          );\r\n        }\r\n      }\r\n      return throwError(() => error);\r\n    })\r\n  );\r\n}"
        },
        {
          "name": "isRefreshing",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/auth.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "false"
        },
        {
          "name": "tokenSubject",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/auth.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new BehaviorSubject<string | null>(null)"
        }
      ],
      "src/app/data/constants/api-routes.constants.ts": [
        {
          "name": "ApiRoutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/data/constants/api-routes.constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    REGISTER: '/auth/register',\r\n    LOGOUT: '/auth/logout',\r\n    FORGOT_PASSWORD: '/auth/forgot-password',\r\n  },\r\n}"
        }
      ],
      "src/app/app.config.ts": [
        {
          "name": "appConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ApplicationConfig",
          "defaultValue": "{\r\n  providers: [\r\n    provideAnimationsAsync(),\r\n    provideStore(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideHttpClient(\r\n      withFetch(),\r\n      withInterceptors([authInterceptor, errorInterceptor]),\r\n    ),\r\n  ],\r\n}"
        }
      ],
      "src/app/core/guards/auth.guard.ts": [
        {
          "name": "authGuard",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/guards/auth.guard.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "CanMatchFn",
          "defaultValue": "() => {\r\n  const router = inject(Router);\r\n  const isUserValid = inject(AuthService);\r\n  if (isUserValid.getBearerToken) return true;\r\n  router.navigate(['/login']);\r\n  return false;\r\n}"
        }
      ],
      "src/environments/environment.development.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.development.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api/v1'\r\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  production: true,\r\n  apiUrl: ''\r\n}"
        }
      ],
      "src/app/core/interceptors/error.interceptor.ts": [
        {
          "name": "errorInterceptor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/error.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HttpInterceptorFn",
          "defaultValue": "(\r\n  req: HttpRequest<unknown>,\r\n  next: HttpHandlerFn,\r\n) => {\r\n  const snackBar = inject(MatSnackBar);\r\n  return next(req).pipe(\r\n    tap({\r\n      // Handle successful responses\r\n      next: (event) => {\r\n        if (\r\n          event instanceof HttpResponse &&\r\n          (event.status === 200 || event.status === 201)\r\n        ) {\r\n          snackBar.open('Operation successful', 'Close', {\r\n            duration: 3000,\r\n            panelClass: 'success-snack',\r\n            horizontalPosition: 'right',\r\n          });\r\n        }\r\n      },\r\n    }),\r\n    catchError((err: HttpErrorResponse) => {\r\n      let errorMessage = '';\r\n\r\n      if (err && err.error.error && err.error.error.message) {\r\n        errorMessage = err.error.error.message + ' ' + err.error.error.details;\r\n      } else {\r\n        errorMessage = getErrorMessage(err);\r\n      }\r\n\r\n      snackBar.open(errorMessage, 'Close', {\r\n        duration: 5000,\r\n        panelClass: 'error-snack',\r\n        horizontalPosition: 'right',\r\n      });\r\n      return throwError(() => err);\r\n    }),\r\n  );\r\n}"
        },
        {
          "name": "getErrorMessage",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/interceptors/error.interceptor.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(error: HttpErrorResponse): string => {\r\n  switch (error.status) {\r\n    case 400:\r\n      return 'Invalid request';\r\n    case 401:\r\n      return 'Unauthorized';\r\n    case 403:\r\n      return 'Access denied';\r\n    case 500:\r\n      return 'Server error occurred';\r\n    default:\r\n      return 'An unexpected error occurred';\r\n  }\r\n}"
        }
      ],
      "src/app/features/food-state/food.state.ts": [
        {
          "name": "FoodStore",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/food-state/food.state.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "signalStore(\r\n  { providedIn: 'root' },\r\n  withState<FoodState>(initialFoodState),\r\n  withDevtools('foodStore'),\r\n  withMethods((store) => ({\r\n    stateInit: (): void => {\r\n      patchState(store);\r\n    },\r\n    clearState: (): void => {\r\n      patchState(store, initialFoodState);\r\n    },\r\n    setFoodShortList(foodShortList: FoodShortModel[]): void {\r\n      patchState(store, { foodShortList });\r\n    },\r\n  })),\r\n  withHooks({\r\n    onInit: ({ stateInit }): void => {\r\n      stateInit();\r\n    },\r\n  }),\r\n)"
        },
        {
          "name": "initialFoodState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/food-state/food.state.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "signalState<FoodState>({\r\n  foodShortList: [] as FoodShortModel[],\r\n  error: null,\r\n})"
        }
      ],
      "src/app/state/global.state.ts": [
        {
          "name": "GlobalStore",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/state/global.state.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "signalStore(\r\n  { providedIn: 'root' },\r\n  withState<GlobalState>(initialGlobalState),\r\n  withDevtools('globalStore'),\r\n  withMethods(\r\n    (store, authService = inject(AuthService), router = inject(Router)) => ({\r\n      stateInit: (): void => {\r\n        patchState(store, { appInit: true });\r\n      },\r\n      clearState: (): void => {\r\n        patchState(store, initialGlobalState);\r\n      },\r\n      loginUser: (email: string, password: string): void => {\r\n        patchState(store, {\r\n          isLoading: true,\r\n        });\r\n        authService.loginUser(email, password).subscribe({\r\n          next: () => {\r\n            patchState(store, {\r\n              isLoading: false,\r\n              error: null,\r\n              isUserAuthorized: true,\r\n            });\r\n            router.navigate(['/layout/dashboard']);\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            patchState(store, { isLoading: false, error: err });\r\n            console.error(err);\r\n          },\r\n        });\r\n      },\r\n      signUpNewUser: (email: string, password: string): void => {\r\n        patchState(store, {\r\n          isLoading: true,\r\n          isSignup: false,\r\n        });\r\n        authService.signUpNewUser(email, password).subscribe({\r\n          next: () => {\r\n            patchState(store, {\r\n              isLoading: false,\r\n              error: null,\r\n              isSignup: true,\r\n            });\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            patchState(store, { isLoading: false, error: err });\r\n          },\r\n        });\r\n      },\r\n      logout: (): void => {\r\n        authService.logout().subscribe({\r\n          next: () => {\r\n            patchState(store, initialGlobalState);\r\n            router.navigate(['/login']);\r\n            authService.resetToken();\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            console.log(err);\r\n            patchState(store, initialGlobalState);\r\n            router.navigate(['/login']);\r\n            authService.resetToken();\r\n          },\r\n        });\r\n      },\r\n    }),\r\n  ),\r\n  withHooks({\r\n    onInit: ({ stateInit }): void => {\r\n      stateInit();\r\n    },\r\n    onDestroy: ({ clearState }): void => {\r\n      clearState();\r\n    },\r\n  }),\r\n)"
        },
        {
          "name": "initialGlobalState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/state/global.state.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "signalState<GlobalState>({\r\n  appInit: false,\r\n  isLoading: false,\r\n  isUserAuthorized: false,\r\n  isSignup: false,\r\n  bearerToken: null,\r\n  error: null,\r\n})"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {
      "src/app/core/models/auth-form.model.ts": [
        {
          "name": "AuthFormType",
          "childs": [
            {
              "name": "LOGIN",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "login"
            },
            {
              "name": "SIGNUP",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "signup"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/core/models/auth-form.model.ts"
        }
      ]
    },
    "groupedTypeAliases": {
      "src/app/core/models/auth-form.model.ts": [
        {
          "name": "AuthFormControls",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "ToFormGroup<AuthForm>",
          "file": "src/app/core/models/auth-form.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        },
        {
          "name": "ToFormGroup",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/core/models/auth-form.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 200
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 2,
    "status": "low",
    "files": [
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/app.config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "appConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/guards/auth.guard.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "authGuard",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/auth.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addToken",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/auth.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "authInterceptor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/auth.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isRefreshing",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/auth.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tokenSubject",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/error.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "errorInterceptor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interceptors/error.interceptor.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getErrorMessage",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth-form.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AuthAction",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth-form.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AuthForm",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth-form.model.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "AuthFormControls",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth-form.model.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "ToFormGroup",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food-state.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodState",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Fats",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodListShortResponse",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodModel",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodResponse",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodShortModel",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodShortModel",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MacroNutrients",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Minerals",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Protein",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Sugars",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "VitaminA",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/food.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Vitamins",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/global-state.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GlobalState",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/route.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RouteData",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/route.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RouteDataForDisplay",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/api.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ApiService",
        "coveragePercent": 20,
        "coverageCount": "1/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/auth.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AuthService",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/nav-routes.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "NavRoutesService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/constants/api-routes.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ApiRoutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/auth-page/auth-page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AuthPageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/features/auth-page/login-form/login-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/features/auth-page/signup-form/signup-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SignupFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/features/dashboard/dashboard.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DashboardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/features/dashboard/gender-picker/gender-picker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GenderPickerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/features/food-search/food-search.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodSearchComponent",
        "coveragePercent": 22,
        "coverageCount": "2/9",
        "status": "low"
      },
      {
        "filePath": "src/app/features/food-state/food.state.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FoodStore",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/food-state/food.state.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "initialFoodState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/meal-board/meal-board.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MealBoardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/meal-statistics/meal-statistics.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MealStatisticsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/recipes/recipes.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RecipesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/layout/login-layout/login-layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginLayoutComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/layout/not-found/not-found.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NotFoundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/layout/secure-layout/secure-layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SecureLayoutComponent",
        "coveragePercent": 25,
        "coverageCount": "1/4",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/header/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/meal-card/meal-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MealCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/nutriens-display/nutrients-display.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NutrientsDisplayComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/page-header/page-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/search-bar/search-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SearchBarComponent",
        "coveragePercent": 14,
        "coverageCount": "2/14",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/side-nav/side-nav.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SideNavComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/spinner/spinner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/state/global.state.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GlobalStore",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/state/global.state.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "initialGlobalState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.development.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "src/stories/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/stories/page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/stories/user.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "User",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      }
    ]
  }
}
